@using MidCapERP.Dto.RolePermission
@model MidCapERP.Dto.Role.RoleRequestDto
@{
    string action = (Model != null && Model.Id != null) ? "UpdateRole" : "CreateRole";
}

<div class="">
    <div class="c-card--wrapper mb-3" id="divRoleModal">
        <div class="c-card--body">
            <form asp-action="@action" asp-controller="Role" method="post" class="modal-form--wrapper" id="frmCreateUpdateRolePermission">
                <div class="row align-items-end">
                    <div class="col-md-3">
                        <div class="product-info--item">
                            <div class="form-group">
                                <input type="hidden" asp-for="Id" />
                                <label class="form-label">
                                    Role Name
                                </label><span class="text-danger">*</span>
                                <input asp-for="Id" type="hidden" class="form-control" placeholder="Role Id" id="RoleId" />
                                <input asp-for="Name" type="text" class="form-control" placeholder="Role Name" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <button type="submit" value="Save" class="btn btn-primary has-spinner" id="btnCreateUpdateRolePermission">Save</button>
                            <a type="button" class="btn btn-primary" asp-controller="Role" asp-action="Index">Back</a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
    @if (@action == "UpdateRole")
    {
        <nav class="product-nav-tab--sticky">
            <div class="nav nav-tabs" id="nav-tab" role="tablist">
                @foreach (var item in Model.ModulePermissionList)
                {
                    <button class="nav-link @(item.ApplicationType == "Portal" ? "active" : "")" id="nav-detail-tab" data-bs-toggle="tab" data-bs-target="#nav-detail_@item.ApplicationType" type="button" role="tab" aria-controls="nav-home" aria-selected="true">@item.ApplicationType Permissions</button>
                }
            </div>
        </nav>
        <div class="tab-content" id="nav-tabContent">
            @foreach (var item in Model.ModulePermissionList)
            {
                <div class="tab-pane fade @(item.ApplicationType == "Portal" ? "active show" : "")" id="nav-detail_@item.ApplicationType" role="tabpanel" aria-labelledby="nav-images-tab">
                    <div class="c-card--wrapper c-card-sm--wrapper">
                        <div class="c-card--body">
                            <ul class="card-main--warpper">
                                @foreach (var module in item.RolePermissionList.DistinctBy(x => x.Module))
                                {
                                    <li class="main-list--warpper">
                                        <div class="permission--title">
                                            <span>
                                                @module.Module
                                            </span>
                                            <div class="custom-control custom-switch">
                                                <input type="checkbox" class="custom-control-input" id="@module.Module" @module.IsChecked>
                                                <label class="custom-control-label" for="@module.Module">Active</label><br>
                                            </div>
                                        </div>
                                        <ul class="sub-list--wrapper">
                                            @foreach (var permission in item.RolePermissionList.Where(x => x.Module == module.Module))
                                            {
                                                <li class="sub-list-item--wrapper">
                                                    <div>
                                                        @Convert.ToString(permission.Permission.Replace("Permissions.","").Replace(item.ApplicationType + ".","").Replace(permission.Module + ".",""))
                                                    </div>
                                                    <div class="custom-control custom-switch">
                                                        <input type="checkbox" class="custom-control-input childPermission" id="@permission.Permission" value="@permission.Permission" @permission.IsChecked>
                                                        <label class="custom-control-label" for="@permission.Permission">Active</label><br>
                                                    </div>
                                                </li>
                                            }
                                        </ul>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        await Html.RenderPartialAsync("_ValidatejQueryUnobtrusive");
        <script asp-src-include="~/js/RolePermission.js"></script>
    }
    }