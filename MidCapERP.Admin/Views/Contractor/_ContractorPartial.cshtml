@model MidCapERP.Dto.Contractors.ContractorsRequestDto

@{
    string action = "";
    if (Model != null && Model.ContractorId != 0)
    {
        action = "Update";
    }
    else
    {
        action = "Create";
    }
}

<!-- Modal -->
<div class="modal right fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Contractor</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    <i class='bx bx-x'></i>
                </button>
            </div>

            <form asp-action="@action" class="modal-form--wrapper">
                <div class="modal-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input asp-for="ContractorId" hidden class="form-control" />
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                <label asp-for="ContractorName" class="form-label"></label>
                                <input asp-for="ContractorName" class="form-control" />
                                <span asp-validation-for="ContractorName" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label asp-for="PhoneNumber" class="form-label"></label>
                                <input asp-for="PhoneNumber" class="form-control" />
                                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label asp-for="IMEI" class="form-label"></label>
                                <input asp-for="IMEI" class="form-control" />
                                <span asp-validation-for="IMEI" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label asp-for="EmailId" class="form-label"></label>
                                <input asp-for="EmailId" class="form-control" />
                                <span asp-validation-for="EmailId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group form-check">
                                <label class="form-check-label">
                                    <input class="form-check-input" asp-for="IsDeleted" /> @Html.DisplayNameFor(model => model.IsDeleted)
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer justify-content-between">
                    <input type="submit" value="Save" class="btn btn-primary" />
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

@{
    await Html.RenderPartialAsync("_ValidatejQueryUnobtrusive");
}